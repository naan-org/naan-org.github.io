{"version":3,"sources":["webpack:///./src/templates/page.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_post__WEBPACK_IMPORTED_MODULE_4__","BlogPostTemplate","_ref","data","pageContext","_data$markdownRemark","markdownRemark","_data$markdownRemark$","frontmatter","title","date","path","author","coverImage","excerpt","tags","pinned","autoExcerpt","id","html","next","previous","a","createElement","description","key","previousPost","nextPost","propTypes","PropTypes","object","isRequired","shape"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAQMa,EAAmB,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,YAAkBC,EAe9CF,EAAKG,eAfyCC,EAAAF,EAEhDG,YACEC,EAH8CF,EAG9CE,MACAC,EAJ8CH,EAI9CG,KACAC,EAL8CJ,EAK9CI,KACAC,EAN8CL,EAM9CK,OACAC,EAP8CN,EAO9CM,WACAC,EAR8CP,EAQ9CO,QACAC,EAT8CR,EAS9CQ,KACAC,EAV8CT,EAU9CS,OAEOC,EAZuCZ,EAYhDS,QACAI,EAbgDb,EAahDa,GACAC,EAdgDd,EAchDc,KAEMC,EAAmBhB,EAAnBgB,KAAMC,EAAajB,EAAbiB,SAEd,OACE3B,EAAA4B,EAAAC,cAACxB,EAAA,EAAD,KACEL,EAAA4B,EAAAC,cAACzB,EAAA,EAAD,CAAKW,MAAOA,EAAOe,YAAaV,GAAWG,IAC3CvB,EAAA4B,EAAAC,cAACvB,EAAA,EAAD,CACEyB,IAAKP,EACLT,MAAOA,EACPC,KAAMA,EACNC,KAAMA,EACNC,OAAQA,EACRC,WAAYA,EACZM,KAAMA,EACNJ,KAAMA,EACNW,aAAeV,EAAoB,KAAXK,EACxBM,SAAWX,EAAgB,KAAPI,MAMbnB,YAEfA,EAAiB2B,UAAY,CAC3BzB,KAAM0B,IAAUC,OAAOC,WACvB3B,YAAayB,IAAUG,MAAM,CAC3BZ,KAAMS,IAAUC,OAChBT,SAAUQ,IAAUC,UAIjB,IAAMtC,EAAS","file":"component---src-templates-page-js-2b01af1054a67931829a.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\n\nimport SEO from \"../components/seo\";\nimport Layout from \"../components/layout\";\nimport Post from \"../components/post\";\n\nconst BlogPostTemplate = ({ data, pageContext }) => {\n  const {\n    frontmatter: {\n      title,\n      date,\n      path,\n      author,\n      coverImage,\n      excerpt,\n      tags,\n      pinned,\n    },\n    excerpt: autoExcerpt,\n    id,\n    html,\n  } = data.markdownRemark;\n  const { next, previous } = pageContext;\n\n  return (\n    <Layout>\n      <SEO title={title} description={excerpt || autoExcerpt} />\n      <Post\n        key={id}\n        title={title}\n        date={date}\n        path={path}\n        author={author}\n        coverImage={coverImage}\n        html={html}\n        tags={tags}\n        previousPost={!pinned ? previous : null}\n        nextPost={!pinned ? next : null}\n      />\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nBlogPostTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    next: PropTypes.object,\n    previous: PropTypes.object,\n  }),\n};\n\nexport const pageQuery = graphql`\n  query($path: String) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      frontmatter {\n        title\n        date(formatString: \"DD MMMM YYYY\")\n        path\n        author\n        excerpt\n        tags\n        pinned\n        coverImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      id\n      html\n      excerpt\n    }\n  }\n`;\n"],"sourceRoot":""}